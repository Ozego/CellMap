//Naive self shuffling 256 integer hashtable inspired by DooM 
//Copyleft Ozeg 2019, all rights reversed
static int HashTable256[256] =
{
     40, 158, 194,  82, 186, 223,   4,   5,  23,  70,  47, 221, 132,  77, 152, 118, 
    240,  79, 183, 160,  69,  37,   6, 149, 190, 237,  86, 137, 227, 147, 201, 110, 
    252, 206,  75,   7, 124,  97, 156, 187,  34,  31, 116, 106, 159, 195, 179, 229, 
    254, 168, 218,  81, 125, 246, 169, 108, 130, 167,  10, 236, 144, 211, 175, 171, 
     22, 199, 253,  50, 104, 155, 207, 193, 215,  91,  80, 197, 234, 109,  87, 113, 
     17,  29, 148,  32,  52, 100, 115,  42, 210, 138, 231, 208,  71, 205, 209,  19, 
    238, 181, 245,   2,  26, 133, 200,  67,   8,  35,  51,  88, 134, 220, 214, 225, 
     62, 162, 174,  59,  73, 196, 140,  41,  53,  24,  48, 224, 176,  55,  45,  20, 
     21,  68, 192, 232,  76, 250, 217, 216,  25,  33,  44, 145,  11, 131, 142, 198, 
      9,   0,  13,  27, 120,   3,  96, 129, 126,  85,  65, 255, 146,  49,  78,  16, 
     61, 121,  95,  63,  64,  84,  30,  28, 188,  94, 184, 204,  93, 189, 111, 135, 
     98, 165, 143,  18, 213,  36, 233,  54, 226, 248, 202, 222, 212, 112, 101,  39, 
    219, 103, 239, 119, 172, 157, 163,  57,  90,  72,  66,  89,  83, 150, 154, 185, 
    228, 123,  56, 139,  15, 151, 127,  43, 241, 164,  58, 251, 117, 249,  12,  14, 
    114, 177, 141,  92,  74, 203, 230, 166, 178,  38,  99, 242, 244, 235, 161, 105, 
    122, 136,  46, 128, 180,  60, 170,   1, 173, 191, 102, 182, 153, 107, 247, 243  
};
int rng256(int id, int seed)
{
    return HashTable256[ ( HashTable256[ id % 256 ] + ( id >> 8 ) + seed ) % 256 ];
};
float rngFloat(int id, int seed)
{
    return (float)rng256( id, seed ) / 256.;
};
float rng2D(int2 id, int seed)
{
    return rngFloat( id.x + ( id.y << 8 ), rng256( seed, id.x ^ id.y ));
};